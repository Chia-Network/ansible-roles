---
- name: Install Deps
  become: yes
  ansible.builtin.apt:
    name:
      - git
    state: present

- name: Ensure chia directories exist
  # become, in case ownership is incorrect
  become: yes
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    recurse: yes
  with_items:
    - "{{ chia_root }}/db"
    - "/home/{{ user }}/chiadns"
    - "/home/{{ user }}/.ssh"

- name: Copy private deploy key into place
  copy:
    content: "{{ private_deploy_key }}\n"
    dest: "/home/{{ user }}/.ssh/id_rsa"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: "0600"

- name: Copy public deploy key into place
  copy:
    content: "{{ public_deploy_key }}\n"
    dest: "/home/{{ user }}/.ssh/id_rsa.pub"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: "0644"

- name: Ensure CHIA_ROOT is set in .bashrc
  ansible.builtin.lineinfile:
    path: "/home/{{ user }}/.bashrc"
    regexp: '^export CHIA_ROOT='
    line: "export CHIA_ROOT={{ chia_root }}"

- name: Ensure correct ref is checked out
  ansible.builtin.git:
    repo: "{{ repo_url }}"
    dest: "/home/{{ user }}/chiadns"
    version: "{{ repo_ref }}"
    update: yes
    force: yes
    accept_hostkey: yes
  register: git_output
  notify:
    - restart-dns-introducer
    - restart-crawler

- name: Chia Install and Init
  shell: |
    sh install.sh
    chia init
  args:
    chdir: "/home/{{ user }}/chiadns"
  environment:
    PATH: "/home/{{ user }}/chiadns/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    CHIA_ROOT: "{{ chia_root }}"
  when: git_output.changed

- name: DNS Config
  template:
    src: config.yaml.j2
    dest: "{{ chia_root }}/config/config.yaml"
  notify:
    - restart-dns-introducer
    - restart-crawler

- name: Allow python in venv to bind 53
  become: yes
  shell: |
    setcap CAP_NET_BIND_SERVICE=+eip $(readlink -f /home/{{ user }}/chiadns/venv/bin/python)

- name: Crawler systemd Config
  become: yes
  ansible.builtin.template:
    src: "crawler.service"
    dest: "/etc/systemd/system/crawler.service"
    owner: root
    group: root
  notify: restart-crawler

- name: DNS Introducer systemd Config
  become: yes
  ansible.builtin.template:
    src: "dns-introducer.service"
    dest: "/etc/systemd/system/dns-introducer.service"
    owner: root
    group: root
  notify: restart-dns-introducer

- name: Ensure services start on boot and are started now
  become: yes
  ansible.builtin.systemd:
    name: "{{ item }}"
    daemon_reload: yes
    enabled: yes
    state: started
  with_items:
    - crawler
    - dns-introducer
