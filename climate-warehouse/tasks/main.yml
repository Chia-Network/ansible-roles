---
- name: Stop Monit Service
  become: yes
  ansible.builtin.service:
    name: monit
    state: stopped
  when: add_monit_config
  ignore_errors: yes # This will still run if the error is not correct

- name: Ensure climate-warehouse directories exist
  # become, in case ownership is incorrect
  become: yes
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    recurse: yes
  with_items:
    - "{{ climate_warehouse_root }}"

- name: Load architecture specific vars for choosing download link
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ansible_architecture}}.yml'
      paths:
        - 'vars'

- name: Determine the latest Climate Warehouse release file
  uri:
    url: https://api.github.com/repos/Chia-Network/climate-warehouse/releases/latest
    return_content: true
    force_basic_auth: true
    url_username: "{{ github_username }}"
    url_password: "{{ github_password }}"
  register: json_response

- name: Get latest Climate Warehouse release
  become: yes
  get_url:
    url: "{{ json_response.json | json_query(latest_url_query) | first }}"
    dest: "/home/{{ user }}/climate-warehouse-{{ json_response.json.tag_name }}.zip"
  vars:
    - latest_url_query: "assets[?starts_with(name,'linux-{{ download_arch }}.zip')].browser_download_url"
  notify: #change
  register: new_release

# Add keys if they don't exist

- name: Download Climate-Warehouse application
  ansible.builtin.get_url:
    url: "https://github.com/Chia-Network/climate-warehouse/releases/download/{{ climate_warehouse_version }}/linux-x64-{{ climate_warehouse_version }}.zip"


- name: Chia Datalayer Systemd Config
  become: yes
  ansible.builtin.template:
    src: "chia-data.service.j2"
    dest: "/etc/systemd/system/chia-data.service"
    owner: root
    group: root
  notify: restart-chia-data

- name: Ensure service is in desired boot and current state
  become: yes
  ansible.builtin.systemd:
    name: chia-data
    daemon_reload: yes
    enabled: "{{ start_on_boot }}"
    state: "{{ start_now | ternary('started','stopped') }}"

- name: Add custom monit config to conf.d
  become: yes
  ansible.builtin.template:
    src: monit_config.j2
    dest: /etc/monit/conf.d/climate_warehouse_monit
  when: add_monit_config
  notify: restart-monit

- name: Start Monit Service
  become: yes
  ansible.builtin.service:
    name: monit
    state: started
  when: add_monit_config and monit_start_now
