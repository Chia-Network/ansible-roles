---
- name: Stop Chia-Blockchain Service
  ansible.builtin.service:
    name: chia
    state: started
  ignore_errors: yes # This will still run if the error is not correct

- name: Install Deps
  become: yes
  ansible.builtin.apt:
    name:
      - git
      - python3-dev
      - build-essential
    state: present
    update_cache: yes
    cache_valid_time: 300
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Ensure chia directories exist
  # become, in case ownership is incorrect
  become: yes
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    recurse: yes
  with_items:
    - "{{ chia_root }}/db"
    - "/home/{{ user }}/chia-blockchain"

- name: Ensure CHIA_ROOT is set in .bashrc
  ansible.builtin.lineinfile:
    path: "/home/{{ user }}/.bashrc"
    regexp: '^export CHIA_ROOT='
    line: "export CHIA_ROOT={{ chia_root }}"

- name: Copy latest blockchain DB from S3
  become: yes
  become_user: "{{ user }}"
  shell: |
    aws s3 cp s3://{{ blockchain_backup_bucket }}/{{ network }}/blockchain_v1_{{ network }}.sqlite {{ chia_root }}/db/blockchain_v1_{{ network }}.sqlite
  args:
    creates: "{{ chia_root }}/db/blockchain_v1_{{ network }}.sqlite"
  when: download_blockchain_db

- name: Ensure correct ref is checked out
  become: yes
  become_user: "{{ user }}"
  ansible.builtin.git:
    repo: "{{ repo_url }}"
    dest: "/home/{{ user }}/chia-blockchain"
    version: "{{ repo_ref }}"
    update: yes
    force: yes
  register: git_output
  notify: restart-chia

- name: Chia Install and Init
  become: yes
  become_user: "{{ user }}"
  shell: |
    sh install.sh
    chia init --fix-ssl-permissions
  args:
    chdir: "/home/{{ user }}/chia-blockchain"
  environment:
    PATH: "/home/{{ user }}/chia-blockchain/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    CHIA_ROOT: "{{ chia_root }}"
  when: git_output.changed

- name: Install timelord
  become: yes
  become_user: "{{ user }}"
  shell: |
    . ./activate
    sh install-timelord.sh
  args:
    chdir: "/home/{{ user }}/chia-blockchain"
  environment:
    PATH: "/home/{{ user }}/chia-blockchain/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    CHIA_ROOT: "{{ chia_root }}"
  when: # List is AND
    - git_output.changed
    - component is match("timelord.*")

- name: Chia Config
  template:
    src: config.yaml.j2
    dest: "{{ chia_root }}/config/config.yaml"
    owner: "{{ user }}"
    group: "{{ group }}"
  notify: restart-chia

- name: Add Keys
  become: yes
  become_user: "{{ user }}"
  shell: |
    echo "{{ item }}" | chia keys add
  args:
    chdir: "/home/{{ user }}/chia-blockchain"
  environment:
    PATH: "/home/{{ user }}/chia-blockchain/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    CHIA_ROOT: "{{ chia_root }}"
  when:
    - keys | length
  with_items: "{{ keys }}"
  notify: restart-chia # @TODO would be better to have this only restart if we could tell keys changed

- name: Chia Systemd Config
  become: yes
  ansible.builtin.template:
    src: "chia.service.j2"
    dest: "/etc/systemd/system/chia.service"
    owner: root
    group: root
  notify: restart-chia

- name: Ensure service is in desired boot and current state
  become: yes
  ansible.builtin.systemd:
    name: chia
    daemon_reload: yes
    enabled: "{{ start_on_boot }}"
    state: "{{ start_now | ternary('started','stopped') }}"

- name: Add vector config
  become: yes
  ansible.builtin.template:
    src: chia-blockchain.vector.toml
    dest: /etc/vector/chia-blockchain.vector.toml
  when: add_vector_config
  notify: restart-vector

- name: Start Chia-Blockchain Service
  ansible.builtin.service:
    name: chia
    state: started

- name: Add custom monit config to conf.d
  become: yes
  ansible.builtin.template:
    src: monit_config.j2
    dest: /etc/monit/conf.d/chia_monit
  when: add_monit_config
  notify: restart-monit
