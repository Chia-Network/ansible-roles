- name: Chia Repository
  become: true
  ansible.builtin.apt_repository:
    repo: deb [arch={{ chia_repo_arch }} signed-by=/usr/share/keyrings/chia.gpg] https://repo.chia.net/debian/ stable main
    update_cache: true
  when: not chia_apt_prerelease

- name: Chia Beta Repository
  become: true
  ansible.builtin.apt_repository:
    repo: deb [arch={{ chia_repo_arch }} signed-by=/usr/share/keyrings/chia.gpg] https://repo.chia.net/prerelease/debian/ prerelease main
    update_cache: true
  when: chia_apt_beta

- name: Install Chia
  become: true
  ansible.builtin.apt:
    name:
      - "{{ chia_apt_package }}{{ (repo_ref == 'latest') | ternary('', '=' + repo_ref) }}"
    update_cache: true
    cache_valid_time: 300
    state: "{{ (repo_ref == 'latest') | ternary('latest', 'present') }}"
    allow_downgrade: true
  register: chia_install
  notify: restart-chia
  retries: 100
  until: chia_install is success or ('Failed to lock apt for exclusive operation' not in chia_install.msg and '/var/lib/dpkg/lock' not in chia_install.msg)

- name: Chia Init
  become: true
  become_user: "{{ user }}"
  ansible.builtin.shell: |
    chia init --fix-ssl-permissions
  environment:
    CHIA_ROOT: "{{ chia_root }}"
  when: chia_install.changed or chia_force_init

# Since chia might have already been updated (via apt) from another user on this machine in some setups
# We track the version as of the last time this role ran, and if it changes, we restart chia
# Set the CHIA_DETECTED_VERSION var here for use in the template in main.yaml
- name: Get installed chia version
  become: true
  become_user: "{{ user }}"
  ansible.builtin.shell: |
    chia version
  environment:
    CHIA_ROOT: "{{ chia_root }}"
  register: chia_version_output

- set_fact:
    CHIA_DETECTED_VERSION: "{{ chia_version_output.stdout }}"
