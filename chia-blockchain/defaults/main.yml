---
# `source` or `apt`
chia_installation_method: source
# Install CLI only by default
chia_apt_package: chia-blockchain-cli
# Install from Chia beta repo (true or false)
chia_apt_prerelease: false

# chia_service_base will be used to make systemd files unique, in case multiple instances of chia run on the same host
# <chia_service_base>-daemon.service
# <chia_service_base>-full-node.service
# etc
chia_service_base: chia
start_on_boot: true
start_now: true
# If set to true, a script will be put in place to generate new certs on first boot
# so that nodes launched from AMIs all have unique node IDs and can connect to each other
chia_cloudinit_new_certs: false

# This is the list of systemd services that will be installed by default
# daemon is required, and chia will fail to run properly without it
# by default, all possible services are installed, even if they are not all enabled
chia_all_services:
  - daemon
  - crawler
  - data-layer
  - data-layer-http
  - farmer
  - full-node
  - harvester
  - hw-vdf
  - introducer
  - seeder
  - timelord
  - timelord-launcher
  - wallet

# This is the list of services that should be enabled on boot and started now (if set to start now)
# Daemon never needs to be listed here, as it is a dependency of the other services
# Defaults to just starting a full node
chia_enabled_services:
  - full-node

user: ubuntu
group: ubuntu

chia_root: "/home/{{ user }}/.chia"
chia_root_to_env: true

# If you are running Chia as multiple users, set this to true to force
# the `chia init` process to run even if the install hasn't changed
chia_force_init: false

# Set the following vars if you need to run chia init with a specific CA
chia_ca_crt: ""
chia_ca_key: ""
chia_private_ca_crt: ""
chia_private_ca_key: ""

# The name of the bucket that blockchain backups can be found in
blockchain_backup_bucket: ""
download_blockchain_db: true
download_crawler_db: false
crawler_segment: "default" # Only used for the crawler DB backup right now
db_version: v2
wallet_db_version: v2

# This gets templated into the top level config
# It will be used to determine how the RPC services, etc bind to an interface
# Typically this is also used to tell other services the hostname/IP of other services, but if binding the top level
# to 0.0.0.0 (to make the RPCs public), we need a second variable for the service to service hostname (chia_service_hostname)
chia_top_level_hostname: "localhost"
# This is the hostname the services use to reach each other on (farmer -> node, etc)
chia_service_hostname: "localhost"
chia_farmer_full_node_peer_host: "localhost"
chia_timelord_full_node_peer_host: "localhost"
chia_wallet_full_node_peer_host: "localhost"

# What network we're running on
# This impacts the backup we retrieve from S3 as well as whether or not we configure for testnet
# This is templated directly into config.yaml as well, so needs to exactly match the network name
network: "mainnet"
full_node_port: 8444
chia_full_node_rpc_port: 8555
introducer_port: 8444
target_outbound_peer_count: 8
target_peer_count: 80
chia_max_inbound_wallet: 20
log_level: "ERROR"

# Other ports, usually only needing to be changed if multiple instances are on the same host
chia_daemon_port: 55400
chia_harvester_port: 8448
chia_harvester_rpc_port: 8560
chia_farmer_port: 8447
chia_farmer_rpc_port: 8559
chia_timelord_launcher_port: 8000
chia_timelord_port: 8446
chia_wallet_port: 8449
chia_wallet_rpc_port: 9256
chia_ui_port: 8222
chia_data_layer_port: 8561
chia_data_layer_rpc_port: 8562
chia_data_layer_host_port: 8575
chia_data_layer_client_timeout: 15

# IPv4/IPv6 network addresses and CIDR blocks allowed to connect even when target_peer_count has been hit.
# exempt_peer_networks: ["192.168.0.3", "192.168.1.0/24", "fe80::/10", "2606:4700:4700::64/128"]
exempt_peer_networks: []

dns_servers:
  - "dns-introducer.chia.net"
  - "chia.ctrlaltdel.ch"
  - "seeder.dexie.space"
  - "chia-seeder.h9.com"
  - "chia.hoffmang.com"
  - "seeder.xchpool.org"

introducer_peer:
  host: introducer.chia.net
  port: 8444
  enable_private_networks: false

application: chia-blockchain
# Currently only used for a promtail label
component: node

# Group Tag is used to add context to the installation, metrics, etc when the application, network, component, and ref
# are otherwise identical
group_tag: default

repo_url: "https://github.com/Chia-Network/chia-blockchain.git"
repo_ref: "latest"

# Keys to add to chia
keys: []
#  - "my words go here"
#  - "my second words go here"

chia_enable_profiler: false
chia_enable_event_log: false
chia_enable_memory_profiler: false
chia_db_sync: "auto"

# Harvester Settings
plot_directories: []
recursive_plot_scan: false
chia_parallel_decompressor_count: 0
chia_decompressor_thread_count: 0
chia_harvester_disable_cpu_affinity: false
chia_max_compression_level_allowed: 7
chia_use_gpu_harvesting: false
chia_gpu_index: 0
chia_enforce_gpu_index: false

# Pool Settings
pool_xch_target_address: ""
pool_list: []

# Farmer Settings
farmer_xch_target_address: ""

# Wallet Settings
spam_filter_after_n_txs: 200
xch_spam_amount: 1000000
reuse_public_key_for_change: {}
  #Add your wallet fingerprint here, this is an example.
  #"2999502625": False

# This is the network overrides section of config.yaml
# When this runs, we attempt to pull the network overrides from the ref specified, but
# have a few defaults here just in case
network_overrides:
  constants:
    mainnet:
      NETWORK_TYPE: 0
      GENESIS_CHALLENGE: ccd5bb71183532bff220ba46c268991a3ff07eb358e8255a65c30a2dce0e5fbb
      GENESIS_PRE_FARM_POOL_PUZZLE_HASH: "d23da14695a188ae5708dd152263c4db883eb27edeb936178d4d988b8f3ce5fc"
      GENESIS_PRE_FARM_FARMER_PUZZLE_HASH: "3d8765d3a597ec1d99663f6c9816d915b9f68613ac94009884c4addaefcce6af"
    testnet10:
      AGG_SIG_ME_ADDITIONAL_DATA: ae83525ba8d1dd3f09b277de18ca3e43fc0af20d20c4b3e92ef2a48bd291ccb2
      DIFFICULTY_CONSTANT_FACTOR: 10052721566054
      DIFFICULTY_STARTING: 30
      EPOCH_BLOCKS: 768
      GENESIS_CHALLENGE: ae83525ba8d1dd3f09b277de18ca3e43fc0af20d20c4b3e92ef2a48bd291ccb2
      GENESIS_PRE_FARM_FARMER_PUZZLE_HASH: 3d8765d3a597ec1d99663f6c9816d915b9f68613ac94009884c4addaefcce6af
      GENESIS_PRE_FARM_POOL_PUZZLE_HASH: d23da14695a188ae5708dd152263c4db883eb27edeb936178d4d988b8f3ce5fc
      MEMPOOL_BLOCK_BUFFER: 10
      MIN_PLOT_SIZE: 18
      NETWORK_TYPE: 1
    testnet11:
      AGG_SIG_ME_ADDITIONAL_DATA: 37a90eb5185a9c4439a91ddc98bbadce7b4feba060d50116a067de66bf236615
      DIFFICULTY_CONSTANT_FACTOR: 10052721566054
      DIFFICULTY_STARTING: 30
      EPOCH_BLOCKS: 768
      GENESIS_CHALLENGE: 37a90eb5185a9c4439a91ddc98bbadce7b4feba060d50116a067de66bf236615
      GENESIS_PRE_FARM_FARMER_PUZZLE_HASH: 08296fc227decd043aee855741444538e4cc9a31772c4d1a9e6242d1e777e42a
      GENESIS_PRE_FARM_POOL_PUZZLE_HASH: 3ef7c233fc0785f3c0cae5992c1d35e7c955ca37a423571c1607ba392a9d12f7
      MEMPOOL_BLOCK_BUFFER: 10
      MIN_PLOT_SIZE: 18
      NETWORK_TYPE: 1
      SUB_SLOT_ITERS_STARTING: 67108864
      # Forks activated from the beginning on this network
      HARD_FORK_HEIGHT: 0
      HARD_FORK_FIX_HEIGHT: 0
      PLOT_FILTER_128_HEIGHT: 6029568
      PLOT_FILTER_64_HEIGHT: 11075328
      PLOT_FILTER_32_HEIGHT: 16121088
  config:
    mainnet:
      address_prefix: "xch"
      default_full_node_port: 8444
    testnet10:
      address_prefix: "txch"
      default_full_node_port: 58444
    testnet11:
      address_prefix: "txch"
      default_full_node_port: 58444

# If set 'True', the timelord will create compact proofs of time, instead of
# extending the chain.
bluebox_mode: "False"

# Number of VDF client processes to keep alive in the local machine.
timelord_launcher_host: localhost
process_count: 3
vdf_client_ips:
  - localhost
  - 127.0.0.1
vdf_server_hostname: localhost

# 'send_uncompact_interval' seconds. Set to 0 if you don't use this feature. Recommended is 300
send_uncompact_interval: 0

# HW VDF Config
chia_enable_hw_vdf: false
chia_hw_vdf_version: latest
chia_hw_vdf_vdf_threads: 16
chia_hw_vdf_proof_threads: 14
chia_hw_vdf_freq: 1100
# 0 will have the effect of not setting this flag
chia_hw_vdf_max_freq: 0
# 0 will have the effect of not enabling it
chia_hw_vdf_auto_freq_period: 0
# Mask: Enabled Core(s)
# 1: 0
# 2: 1
# 3: 0,1
# 4: 2
# 5: 0,2
# 6: 1,2
# 7: 0,1,2
chia_hw_vdf_mask: 7
chia_hw_num_vdfs: "{{ '1' if chia_hw_vdf_mask in [1,2,4] else '2' if chia_hw_vdf_mask in [3,5,6] else '3' }}"

# Seeder Config
minimum_height: 240000
bootstrap_peers:
  - node.chia.net
domain_name: dns-introducer.chia.net.
nameserver: chia.net.
ttl: 300
soa_rname: "hostmaster.chia.net."

# promtail/Loki Related
add_promtail_config: false
loki_endpoint: http://localhost:3100
loki_basic_auth: false
loki_basic_auth_username: ""
loki_basic_auth_password: ""
promtail_start_now: true

# monit service related
chia_add_healthcheck_service: true
chia_healthcheck_port: 9950
add_monit_config: true
monit_start_now: true
# How many times the port check needs to fail before monit will restart the service
chia_monit_failure_threshold: 3

# Connect to certain peers on a given interval
chia_periodic_connect_interval:
  minute: "*/5"
  hour: "*"
chia_periodic_connect_peers: []

# Set to false to limit connections to trusted nodes only (like localhost)
chia_wallet_connect_to_unknown_peers: true
