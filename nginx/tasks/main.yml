---
- name: Install Nginx
  become: true
  ansible.builtin.apt:
    name:
      - nginx
    state: present
    update_cache: true
    cache_valid_time: 300
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Remove existing default Nginx site configuration(s)
  become: true
  ansible.builtin.file:
    path: "/etc/nginx/sites-enabled/{{ item }}"
    state: absent
  with_items:
    - default
    - default.conf
  notify: Reload-nginx

- name: Copy default config
  become: true
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/nginx/conf.d/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - "custom-default.conf"
  notify: Reload-nginx

- name: Copy snippets
  become: true
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/nginx/snippets/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - "lets-encrypt-webroot.conf"
  notify: Reload-nginx

- name: Ensure certbot webroot directory exists
  become: true
  ansible.builtin.file:
    path: "{{ certbot_webroot_path }}"
    state: directory
    mode: '0755'

- name: Ensure we have the latest nginx options from certbot
  become: true
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf
    dest: /etc/nginx/snippets/options-ssl-nginx.conf
    mode: '0440'
  notify: Reload-nginx

- name: Ensure service is in desired boot and current state
  become: true
  ansible.builtin.systemd:
    name: nginx
    daemon_reload: true
    enabled: "{{ nginx_start_on_boot }}"
    state: "{{ nginx_start_now | ternary('started', 'stopped') }}"

# Run any handlers that have been triggered up to this point now
# Useful if we need an nginx config reload or somethign along those lines
# cecause other roles (certbot for example) expect the config to be in a good state
# to issue a cert
- name: Flush handlers
  ansible.builtin.meta: flush_handlers
