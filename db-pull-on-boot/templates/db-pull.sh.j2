#!/bin/bash
LOCK_FILE="/tmp/db-pull.lock"

cleanup() {
	rm -f "$LOCK_FILE"
	sudo systemctl start chia
	sudo systemctl start monit
}

if [ -e $LOCK_FILE ]; then
	echo "Lock file exists, not pulling the database"
	exit 1
fi

trap cleanup EXIT

touch $LOCK_FILE

echo "Downloading s3 database..."
aws --no-progress s3 cp "s3://{{ blockchain_backup_bucket }}/{{ network }}/blockchain_{{ db_version }}_{{ network }}.sqlite" "{{ chia_root }}/blockchain_{{ db_version }}_{{ network }}.sqlite"
aws --no-progress s3 cp "s3://{{ blockchain_backup_bucket }}/{{ network }}/height-to-hash" "{{ chia_root }}/height-to-hash"
aws --no-progress s3 cp "s3://{{ blockchain_backup_bucket }}/{{ network }}/sub-epoch-summaries" "{{ chia_root }}/sub-epoch-summaries"
sudo chown ubuntu:ubuntu "{{ chia_root }}/blockchain_{{ db_version }}_{{ network }}.sqlite"
sudo chown ubuntu:ubuntu "{{ chia_root }}/height-to-hash"
sudo chown ubuntu:ubuntu "{{ chia_root }}/sub-epoch-summaries"

echo "Stopping monit services..."
sudo systemctl stop monit || true

echo "Stopping chia services..."
sudo systemctl stop chia

count=1
while :; do
	processes=$(pgrep chia_ | wc -l)
	echo "found $processes running chia processes. Waiting for all processes to stop..."

	# Exit conditions
	[[ $processes -gt 0 ]] || break
	[[ $count -lt 30 ]] || exit 2

	count=$(expr $count + 1)
	sleep 1
done

#Permission will be required to pull an object from the S3 bucket.

echo "Moving the database....."
mv "{{ chia_root }}/blockchain_{{ db_version }}_{{ network }}.sqlite" "{{ chia_root }}/db/blockchain_{{ db_version }}_{{ network }}.sqlite"
mv "{{ chia_root }}/height-to-hash" "{{ chia_root }}/db/height-to-hash"
mv "{{ chia_root }}/sub-epoch-summaries" "{{ chia_root }}/db/sub-epoch-summaries"
