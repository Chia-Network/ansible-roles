---
# For choosing correct installation file and compatability with installer naming pattern
- name: Load architecture specific vars
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ansible_architecture}}.yml'
      paths:
        - 'vars'

# Preliminary check to see if SentinelOne service is already running
- name: Check if SentinelOne service is active
  ansible.builtin.shell: |
    if [ "$(ps aux | grep -c s1)" -ge 2 ]; then
      echo "false"
    else
      echo "true"
    fi
  register: install_sentinelone
  ignore_errors: true

# Preliminary check to see if SentinelOne service is already running
# - name: Check if SentinelOne service is active
#   ansible.builtin.systemd:
#     name: sentinelone.service
#     state: started
#   register: sentinelone_status
#   ignore_errors: true

# Use ephemeral AWS credentials provided in the CI/CD actions. Make sure the
# following variables are set:
#   tmp_aws_access_key
#   tmp_aws_secret_key
#   tmp_aws_session_token
#   sentinelone_bucket
#   sentinelone_version
# The sentinelone_arch variable is set automatically in the task above.
- name: Download SentinelOne installer from private S3 bucket
  ansible.builtin.shell: "aws --no-progress s3 cp s3://{{ sentinelone_bucket }}/SentinelAgent{{ sentinelone_arch }}_linux_v{{ sentinelone_version }}.deb /tmp/SentinelAgent_linux_v{{ sentinelone_version }}.deb"
  args:
    creates: /tmp/SentinelAgent_linux_v{{ sentinelone_version }}.deb
  become: true
  when: ansible_distribution in ['Ubuntu', 'Debian'] and install_sentinelone.stdout == "true"


- name: Transfer SentinelOne configuration file that will be used during installation only
  ansible.builtin.template:
    src: s1-config.cfg
    dest: /tmp/s1-config.cfg
    owner: root
    group: root
    mode: '0700'
  become: true
  when: install_sentinelone.stdout == "true"

- name: Install SentinelOne package
  ansible.builtin.apt:
    deb: /tmp/SentinelAgent_linux_v{{ sentinelone_version }}.deb
    state: present
  become: true
  environment:
    S1_AGENT_INSTALL_CONFIG_PATH: "/tmp/s1-config.cfg"
  when: ansible_distribution in ['Ubuntu', 'Debian'] and install_sentinelone.stdout == "true"
  notify:
    - Enable-SentinelOne
    - Start-SentinelOne

# Don't leave the sensitive config file on the system after install
- name: Remove SentinelOne installation configuration file
  ansible.builtin.file:
    path: /tmp/s1-config.cfg
    state: absent
  become: true
  when: install_sentinelone.stdout == "true"
