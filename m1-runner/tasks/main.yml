---
# chia-runner/tasks/main.yml
- name: Make .zshenv or verify that it exists
  ansible.builtin.file:
    path: "~/.zshenv"
    mode: '0755'
    state: touch

- name: Insert the proper path for gnu-tar in .zshenv.
  lineinfile:
    path: "~/.zshenv"
    line: export PATH=/opt/homebrew/opt/gnu-tar/libexec/gnubin:$PATH
    regexp: '^export.PATH=/opt/homebrew/opt/gnu-tar'
    insertbefore: EOF

- name: Insert the proper path for homebrew bin in .zshenv.
  lineinfile:
    path: "~/.zshenv"
    line: export PATH=/opt/homebrew/bin:$PATH
    regexp: '^export.PATH=/opt/homebrew/bin'
    insertbefore: EOF

- name: Insert the proper path for homebrew sbin in .zshenv.
  lineinfile:
    path: "~/.zshenv"
    line: export PATH=/opt/homebrew/sbin:$PATH
    regexp: '^export.PATH=/opt/homebrew/sbin'
    insertbefore: EOF

- name: Insert the proper path for cargo in .zshenv.
  lineinfile:
    path: "~/.zshenv"
    line: export PATH=/Users/chia/.cargo/bin:$PATH
    regexp: '^export.PATH=/Users/chia/.cargo'
    insertbefore: EOF

- name: Make action-runner directory
  ansible.builtin.file:
    path: "{{ runner_directory_path }}"
    state: directory
    mode: '0755'

- name: Download runner tarball
  get_url:
    url: https://github.com/actions/runner/releases/download/v{{ runner_release_version }}/actions-runner-osx-x64-{{ runner_release_version }}.tar.gz
    dest: "{{ runner_directory_path }}"
    mode: '0755'

- name: Unarchive runner tarball
  ansible.builtin.unarchive:
    src: "{{ runner_directory_path }}/actions-runner-osx-x64-{{ runner_release_version }}.tar.gz"
    dest: "{{ runner_directory_path }}"
    remote_src: yes
    list_files: yes
    creates: "{{ runner_directory_path }}/svc.sh"

- name: Configure the runner for GitHub
  shell: arch -x86_64 ./config.sh --url https://github.com/Chia-Network --token "{{ runner_registration_token }}" --runnergroup "{{ runner_github_group }}" --labels "{{ runner_tags }}" --name "{{ inventory_hostname }}" --unattended
  args:
    chdir: "{{ runner_directory_path }}"
    creates: "{{ runner_directory_path }}/.runner"
  register: configure
- debug:
    msg: "{{ configure.stdout }}"

- name: Install the runner service
  shell: |
    arch -x86_64 ./svc.sh install
  args:
    chdir: "{{ runner_directory_path }}"
    creates: "~/Library/LaunchAgents/actions.runner.Chia-Network.{{ inventory_hostname }}.plist"
  register: install
- debug:
    msg: "{{ install.stdout }}"

- name: Start the runner service
  shell: |
    arch -x86_64 ./svc.sh start
    arch -x86_64 ./svc.sh status
  args:
    chdir: "{{ runner_directory_path }}"
  register: output
- debug:
    msg: "{{ output.stdout }}"

- name: Move .path to actions-runner directory
  template:
    src: .path
    dest: "{{ runner_directory_path }}"
