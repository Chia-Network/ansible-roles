---
- name: Load architecture specific vars
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ansible_architecture}}.yml'
      paths:
        - 'vars'
  tags: core-registry-api

- name: Add Climate Repository
  become: true
  ansible.builtin.apt_repository:
    repo: deb [arch={{ climate_explorer_repo_arch }} signed-by=/usr/share/keyrings/chia.gpg] https://repo.chia.net/climate-tokenization/debian/ stable main
    update_cache: true
  tags: core-registry-api

- name: Install Core Registry
  become: true
  ansible.builtin.apt:
    name:
      - "core-registry-api{{ (core_registry_api_version == 'latest') | ternary('', '=' + core_registry_api_version) }}"
    update_cache: true
    cache_valid_time: 300
    state: "{{ (core_registry_api_version == 'latest') | ternary('latest', 'present') }}"
    allow_downgrade: true
  register: core_registry_api_install
  notify: restart-core-registry-api
  retries: 100
  tags: core-registry-api

- name: Create config directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ user }}"
    group: "{{ user }}"
  loop:
    - "{{ chia_root }}/cadt/v1/"
    - "{{ chia_root }}/climate_token/config/"
    - "{{ chia_root }}/climate-tokenization-engine/"
  tags: core-registry-api

- name: Add core registry CADT config file
  ansible.builtin.template:
    src: "cadt-config.yaml.j2"
    dest: "{{ chia_root }}/cadt/v1/config.yaml"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0644'
  notify:
    - restart-core-registry-api
  tags: core-registry-api

- name: Add token driver config file
  ansible.builtin.template:
    src: "climate-token-config.yaml.j2"
    dest: "{{ chia_root }}/climate_token/config/config.yaml"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0644'
  notify:
    - restart-core-registry-api
  tags: core-registry-api

- name: Add climate tokenization engine config file
  ansible.builtin.template:
    src: "climate-tokenization-engine-config.yaml.j2"
    dest: "{{ chia_root }}/climate-tokenization-engine/config.yaml"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0644'
  notify:
    - restart-core-registry-api
  tags: core-registry-api

- name: Create Nginx config for API domains if different than UI domain
  become: true
  ansible.builtin.template:
    src: app.conf.j2
    dest: /etc/nginx/conf.d/{{ core_registry_api_hosts | first }}.conf
    owner: root
    group: root
    mode: '0644'
  when: core_registry_api_proxy == true and ((core_registry_api_hosts | difference(core_registry_ui_hosts)) | length>0)
  tags: core-registry-api
  notify: Reload-nginx

- name: Create directory for CADT API include
  become: true
  ansible.builtin.file:
    path: /etc/nginx/proxy_includes
    state: directory
    mode: '0755'
    owner: "root"
    group: "root"
  when:
    - cadt_api_proxy == true
  tags: core-registry-api

- name: Template Nginx config for API proxies
  become: true
  ansible.builtin.template:
    src: proxy.inc.j2
    dest: /etc/nginx/proxy_includes/{{ item.proxy_type }}-api-proxy-{{ item.proxy_port }}.inc
    owner: root
    group: root
    mode: '0644'
  vars:
    proxy_path: "{{ item.proxy_path }}"
    proxy_port: "{{ item.proxy_port }}"
  loop:
    - "{ proxy_type: cadt, proxy_path: {{ cadt_api_proxy_path }}, proxy_port: {{ cadt_port }} }"
    - "{ proxy_type: explorer, proxy_path: {{ climate_explorer_api_proxy_path }}, proxy_port: {{ climate_explorer_port }} }"
    - "{ proxy_type: registry, proxy_path: {{ climate_tokenization_chia_api_proxy_path }}, proxy_port: {{ climate_tokenization_port }} }"
    - "{ proxy_type: registry, proxy_path: {{ climate_tokenization_engine_api_proxy_path }}, proxy_port: {{ climate_tokenization_engine_port }} }"
  when:
    - core_registry_api_proxy == true
  tags: core-registry-api
  notify: Reload-nginx

# TO BE ADDED IN NEAR FUTURE
# - name: Add custom monit configs to conf.d for Core Registry
#   become: true
#   ansible.builtin.template:
#     src: monit_config.j2
#     dest: /etc/monit/conf.d/core_registry_api_monit_{{ user }}
#     owner: root
#     group: root
#     mode: '0644'
#   notify: restart-monit
#   tags: core-registry-api
