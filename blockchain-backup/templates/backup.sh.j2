#!/bin/bash

NOW=$(date)
echo "Starting backup at ${NOW}"

LOCK_FILE="/tmp/blockchain-backup.lock"

cleanup() {
	echo "Removing lock file..."
	rm -f "$LOCK_FILE"
	echo "Removing *.sqlite files..."
	rm -f /tmp/*.sqlite
	echo "Removing *.sqlite.gz files..."
	rm -f /tmp/*.sqlite.gz
	echo "Starting Chia..."
	sudo systemctl start chia
	echo "Starting Monit..."
	sudo systemctl start monit
	echo "Done!  Exiting..."
}

if [ -e $LOCK_FILE ]; then
	echo "Lock file exists, not starting another backup"
	exit 1
fi

trap cleanup EXIT

touch $LOCK_FILE

echo "Authenticating with b2 service"
/usr/local/sbin/b2 authorize-account {{ b2_application_key_id }} {{ b2_application_key }}

echo "Stopping monit services..."
sudo systemctl stop monit
echo "Stopping chia services..."
sudo systemctl stop chia

count=1
while :; do
	processes=$(ps -aux | grep chia | grep -v grep | wc -l)
	echo "found $processes running chia processes. Waiting for all processes to stop..."

	# Exit conditions
	[[ $processes > 0 ]] || break
	[[ $count -lt 30 ]] || exit 2

	count=$(expr $count + 1)
	sleep 1
done

echo "Compressing database..."
gzip -c "{{ chia_root }}/db/blockchain_{{ db_version }}_{{ network }}.sqlite" >"/tmp/blockchain_{{ db_version }}_{{ network }}.sqlite.gz"

echo "Starting upload to s3 (uncompressed)..."
aws --no-progress s3 cp "{{ chia_root }}/db/blockchain_{{ db_version }}_{{ network }}.sqlite" "s3://{{ blockchain_backup_bucket }}/{{ network }}/blockchain_{{ db_version }}_{{ network }}.sqlite"

echo "Starting upload to s3 (compressed)..."
aws --no-progress s3 cp "/tmp/blockchain_{{ db_version }}_{{ network }}.sqlite.gz" "s3://{{ blockchain_backup_bucket }}/{{ network }}/blockchain_{{ db_version }}_{{ network }}.sqlite.gz"

{% if network != "mainnet" %}
{% if secondary_backup_bucket != "" %}
echo "Uploading compressed database to secondary backup bucket..."
aws --no-progress s3 cp "/tmp/blockchain_{{ db_version }}_{{ network }}.sqlite.gz" "s3://{{ secondary_backup_bucket }}/{{ network }}/blockchain_{{ db_version }}_{{ network }}.sqlite.gz"

echo "Uploading compressed database to b2 bucket..."
/usr/local/sbin/b2 upload-file --noProgress chia-b2-testing "/tmp/blockchain_{{ db_version }}_{{ network }}.sqlite.gz" "blockchain_{{ db_version }}_{{ network }}.sqlite.gz"

{% endif %}
{% endif %}

echo "Backup Complete!"
