---
- name: Install Deps
  become: true
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - curl
      - gnupg
      - python3-apt
    state: present
    update_cache: true
    cache_valid_time: 300
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Create the apt keyrings directory
  become: true
  ansible.builtin.file:
    path: /usr/share/keyrings/
    state: directory
    mode: '0755'

- name: Create the promtail log directory
  become: true
  ansible.builtin.file:
    path: /var/log/promtail
    state: directory
    group: adm
    mode: '0775'

- name: Download Grafana GPG key
  become: true
  ansible.builtin.apt_key:
    url: https://apt.grafana.com/gpg.key
    state: present
    keyring: /usr/share/keyrings/grafana.gpg

- name: Add Grafana apt repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/grafana.gpg] https://apt.grafana.com stable main"
    filename: grafana

- name: Install promtail
  become: yes
  ansible.builtin.apt:
    name: promtail
    state: present
  notify: restart-promtail
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Template chia target file
  become: yes
  template:
    src: chia_targets.yml.j2
    dest: /etc/promtail/chia_targets.yml

- name: Template fail2ban target file
  become: yes
  template:
    src: fail2ban_targets.yml
    dest: /etc/promtail/fail2ban_targets.yml

- name: Template promtail config
  become: yes
  template:
    src: config.yml.j2
    dest: /etc/promtail/config.yml

- name: Add the promtail user and adm to the ubuntu group so it can read log files
  become: yes
  ansible.builtin.user:
    name: promtail
    groups: ubuntu,adm
    append: yes

- name: Set desired boot state
  become: yes
  ansible.builtin.systemd:
    name: promtail
    daemon_reload: true
    enabled: "{{ promtail_start_on_boot }}"

- name: Set desired current state
  become: yes
  ansible.builtin.systemd:
    name: promtail
    state: "{{ promtail_start_now | ternary('started','stopped') }}"
  ignore_errors: yes # In case we have a bad config and we need to finish the playbook to continue
