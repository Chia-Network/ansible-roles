---
- name: Load architecture specific vars
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ansible_architecture}}.yml'
      paths:
        - 'vars'

- name: Ensure old installation methods are cleaned up
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/home/{{ user }}/bin/chia-exporter"

- name: Chia Exporter Repository
  become: true
  ansible.builtin.apt_repository:
    repo: deb [arch={{ chia_exporter_repo_arch }} signed-by=/usr/share/keyrings/chia.gpg] https://repo.chia.net/chia-exporter/debian/ stable main
    update_cache: yes

- name: Install Chia Exporter
  become: true
  ansible.builtin.apt:
    name:
      - "chia-exporter{{ ( chia_exporter_version == 'latest' ) | ternary('', '=' + chia_exporter_version) }}"
    update_cache: yes
    cache_valid_time: 300
    state: "{{ ( chia_exporter_version == 'latest' ) | ternary('latest', 'present') }}"
    allow_downgrade: true
  notify: restart-chia-exporter
  register: apt_action
  retries: 100
  until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

- name: Copy maxmind Country DB from S3
  become: true
  become_user: "{{ user }}"
  shell: |
    aws --no-progress s3 cp "s3://{{ maxmind_db_backup_bucket }}/{{ maxmind_country_db_name }}" "/home/{{ user }}/bin/{{ maxmind_country_db_name }}"
  args:
    creates: "/home/{{ user }}/bin/{{ maxmind_country_db_name }}"
  notify: restart-chia-exporter
  when: download_maxmind_db

- name: Copy maxmind ASN DB from S3
  become: true
  become_user: "{{ user }}"
  shell: |
    aws --no-progress s3 cp "s3://{{ maxmind_db_backup_bucket }}/{{ maxmind_asn_db_name }}" "/home/{{ user }}/bin/{{ maxmind_asn_db_name }}"
  args:
    creates: "/home/{{ user }}/bin/{{ maxmind_asn_db_name }}"
  notify: restart-chia-exporter
  when: download_maxmind_db

- name: Chia Exporter Systemd Config
  become: true
  ansible.builtin.template:
    src: "chia-exporter.service.j2"
    dest: "/etc/systemd/system/{{ chia_exporter_service_name }}"
    owner: root
    group: root
  notify: restart-chia-exporter

- name: Copy chia-exporter config file
  become: true
  ansible.builtin.template:
    src: "chia-exporter.yml.j2"
    dest: "/home/{{ user }}/.chia-exporter.yml"
    owner: "{{ user }}"
    group: "{{ group }}"
  notify: restart-chia-exporter

- name: Ensure chia-exporter service is in desired boot and current state
  become: true
  ansible.builtin.systemd:
    name: "{{ chia_exporter_service_name }}"
    daemon_reload: yes
    enabled: "{{ chia_exporter_start_on_boot }}"
    state: "{{ chia_exporter_start_now | ternary('started','stopped') }}"

- name: Add custom monit config to conf.d
  become: true
  ansible.builtin.template:
    src: monit_config.j2
    dest: /etc/monit/conf.d/chia_exporter_monit
  when: chia_exporter_add_monit_config
  notify: restart-monit

- name: Start Monit Service
  become: true
  ansible.builtin.service:
    name: monit
    state: started
  when: chia_exporter_add_monit_config and monit_start_now

- name: Add logrotate script for validation time log files
  become: yes
  template:
    src: block-times-logrotate.j2
    dest: "/etc/logrotate.d/block-times-logrotate"
    mode: '0644'
  when: chia_exporter_log_block_times
